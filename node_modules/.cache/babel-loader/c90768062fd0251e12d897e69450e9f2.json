{"ast":null,"code":"import React, { Component } from \"react\";\nimport axios from \"axios\"; //import { ToastContainer } from \"react-toastify\";\n//import http from \"./services/httpService\";\n//import config from \"./config.json\";\n//import \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./App.css\"; //const apiEndpoint = \"https://jsonplaceholder.typicode.com/posts\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.handleAdd = () => {\n      console.log(\"Add\"); //  const obj = { title: \"a\", body: \"b\" };\n      //const { data: post } = await http.post(apiEndpoint, obj);\n      //const posts = [post, ...this.state.posts];\n      //this.setState({ posts });\n    };\n\n    this.handleUpdate = async post => {//    post.title = \"UPDATED\";\n      // await http.put(apiEndpoint + \"/\" + post.id, post);\n      // const posts = [...this.state.posts];\n      // const index = posts.indexOf(post);\n      // posts[index] = { ...post };\n      // this.setState({ posts });\n    };\n\n    this.handleDelete = async post => {// const originalPosts = this.state.posts;\n      // const posts = this.state.posts.filter((p) => p.id !== post.id);\n      // this.setState({ posts });\n      // try {\n      //   await http.delete(config.apiEndpoint + \"/\" + post.id);\n      // } catch (ex) {\n      //   if (ex.response && ex.response.status === 404)\n      //     alert(\"This post has already been deleted.\");\n      //   this.setState({ posts: originalPosts });\n      //}\n    };\n  }\n\n  async componentDidMount() {\n    // pending > resolved (success) OR rejected (failure)\n    const {\n      data: posts\n    } = await http.get(apiEndpoint);\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joan/http-app/src/App.js"],"names":["React","Component","axios","App","state","posts","handleAdd","console","log","handleUpdate","post","handleDelete","componentDidMount","data","http","get","apiEndpoint","setState","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;;AACA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;;AAAA,SAW1BC,SAX0B,GAWd,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADgB,CACI;AACpB;AACA;AACA;AACD,KAhByB;;AAAA,SAkB1BC,YAlB0B,GAkBX,MAAOC,IAAP,IAAgB,CAC7B;AACA;AACA;AACA;AACA;AACA;AACD,KAzByB;;AAAA,SA2B1BC,YA3B0B,GA2BX,MAAOD,IAAP,IAAgB,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAtCyB;AAAA;;AAKH,QAAjBE,iBAAiB,GAAG;AACxB;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAER;AAAR,QAAkB,MAAMS,IAAI,CAACC,GAAL,CAASC,WAAT,CAA9B;AACA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACD;;AA+BDa,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AA1CyB;;AA6C5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n//import { ToastContainer } from \"react-toastify\";\n//import http from \"./services/httpService\";\n//import config from \"./config.json\";\n//import \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\n//const apiEndpoint = \"https://jsonplaceholder.typicode.com/posts\";\n\nclass App extends Component {\n  state = {\n    posts: [],\n  };\n\n  async componentDidMount() {\n    // pending > resolved (success) OR rejected (failure)\n    const { data: posts } = await http.get(apiEndpoint);\n    this.setState({ posts });\n  }\n\n  handleAdd = () => {\n    console.log(\"Add\"); //  const obj = { title: \"a\", body: \"b\" };\n    //const { data: post } = await http.post(apiEndpoint, obj);\n    //const posts = [post, ...this.state.posts];\n    //this.setState({ posts });\n  };\n\n  handleUpdate = async (post) => {\n    //    post.title = \"UPDATED\";\n    // await http.put(apiEndpoint + \"/\" + post.id, post);\n    // const posts = [...this.state.posts];\n    // const index = posts.indexOf(post);\n    // posts[index] = { ...post };\n    // this.setState({ posts });\n  };\n\n  handleDelete = async (post) => {\n    // const originalPosts = this.state.posts;\n    // const posts = this.state.posts.filter((p) => p.id !== post.id);\n    // this.setState({ posts });\n    // try {\n    //   await http.delete(config.apiEndpoint + \"/\" + post.id);\n    // } catch (ex) {\n    //   if (ex.response && ex.response.status === 404)\n    //     alert(\"This post has already been deleted.\");\n    //   this.setState({ posts: originalPosts });\n    //}\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}